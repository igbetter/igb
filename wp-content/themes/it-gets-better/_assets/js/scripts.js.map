{"version":3,"sources":["darkmode-lightmode-toggle.js","nav-toggle.js","nav.js","safe-exit.js","sticky-header-helper.js"],"names":["igbDarkMode","init","this","changeListener","tabindexListener","$darkToggles","document","querySelectorAll","length","forEach","$t","addEventListener","e","toggle","currentTarget","checked","$s","key","keyCode","$checkbox","closest","querySelector","isChecked","classList","localStorage","setItem","setTimeout","body","$","fn","toggleAttr","attr","val","removeAttr","toggleAttrVal","val1","val2","test","on","toggleClass","jQuery","ready","addClass","preventDefault","hasClass","removeClass","parent","$subMenu","siblings","not","html","clone","animate","marginLeft","remove","target","hover","event","href","innerHTML","window","open","location","replace","scroll","scrollTop"],"mappings":"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","file":"scripts.js","sourcesContent":["const igbDarkMode = {\n  init() {\n    this.changeListener();\n    this.tabindexListener();\n  },\n\n  /**\n   * Change listener for dark mode toggle\n   */\n  changeListener() {\n    const $darkToggles = document.querySelectorAll('.dark-toggle input[type=\"checkbox\"]');\n    if ($darkToggles.length <= 0) { return; }\n\n    $darkToggles.forEach(($t) => {\n      $t.addEventListener('change', (e) => {\n        this.toggle(e.currentTarget.checked);\n      });\n    });\n  },\n\n  /**\n   * Keyboard listener for dark mode toggle\n   */\n  tabindexListener() {\n    const $darkSwitches = document.querySelectorAll('.dark-toggle__switch');\n\n    $darkSwitches.forEach(($s) => {\n      $s.addEventListener('keyup', (e) => {\n        if (e.key === 'Enter' || e.keyCode === 13) {\n          const $checkbox = e.currentTarget.closest('.dark-toggle').querySelector('input[type=\"checkbox\"]');\n          $checkbox.checked = !$checkbox.checked;\n          this.toggle($checkbox.checked);\n        }\n      });\n    });\n  },\n\n  /**\n   * Toggle the body class and cache the variable\n   */\n  toggle(isChecked) {\n\tdocument.querySelector('body').classList.toggle('theme-light');\n    document.querySelector('body').classList.toggle('theme-dark', isChecked);\n    localStorage.setItem('darkMode', isChecked);\n  },\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tigbDarkMode.init();\n});\n\nsetTimeout(function(){\n    document.body.classList.toggle('preload');\n},500);","(function($) {\n\t\"use strict\";\n\n\t// jquery toggle whole attribute\n  $.fn.toggleAttr = function(attr, val) {\n    var test = $(this).attr(attr);\n    if ( test ) {\n      // if attrib exists with ANY value, still remove it\n      $(this).removeAttr(attr);\n    } else {\n      $(this).attr(attr, val);\n    }\n    return this;\n  };\n\n  // jquery toggle just the attribute value\n  $.fn.toggleAttrVal = function(attr, val1, val2) {\n    var test = $(this).attr(attr);\n    if ( test === val1) {\n      $(this).attr(attr, val2);\n      return this;\n    }\n    if ( test === val2) {\n      $(this).attr(attr, val1);\n      return this;\n    }\n    // default to val1 if neither\n    $(this).attr(attr, val1);\n    return this;\n  };\n\n\t$( '#menu_toggle_button' ).on( 'click', function(e) {\n\t\t$(this).toggleClass('menu_open');\n\t\t$('body').toggleClass('menu_is_open');\n\t\t$('#site_utility_nav').toggleClass('hidden');\n\t\t$( 'path.top_line' ).toggleAttrVal( 'd', 'm 5 5 l 30 30', 'm 15 10 l 20 0');\n\t\t$( 'path.bottom_line' ).toggleAttrVal( 'd', 'm 5 35 l 30 -30', 'm 5 30 l 30 0');\n\t});\n})(jQuery);","jQuery(document).ready(function($) {\n\n\t$('li.current_page_parent').addClass('sub_menu_open');\n\n\n\n/*\n\t$( '.dropdown_toggle' ).on( 'click', function(e) {\n\te.preventDefault();\n\n\tif( $(this).hasClass( 'closed' ) ) {\n\t\t$( 'li.menu-item-has-children' ).removeClass( 'sub_menu_open' );\n\t\t$( '.dropdown_toggle').removeClass( 'open' ).addClass( 'closed' );\n\t\t$(this).removeClass( 'closed' ).addClass( 'open' );\n\t\t$(this).parent( 'li.menu-item-has-children' ).addClass( 'sub_menu_open' );\n\t\t$(this).find( '.sub-menu' ).show().animate( {\n                width: \"toggle\"\n            });\n\t}\n\telse {\n\t\t$(this).removeClass( 'open' ).addClass( 'closed' );\n\t\t$(this).parent( 'li.menu-item-has-children' ).removeClass( 'sub_menu_open' );\n\t}\n\t});\n\n\t$( '.back_button' ).on( 'click' , function(e) {\n\t\t$(this).parents( 'li.menu-item-has-children' ).removeClass( 'sub_menu_open' );\n\t\t$(this).parent( '.sub-menu' ).hide().animate( {\n\t\t\t\t\twidth: \"toggle\"\n\t\t\t\t});\n\t});\n\n\tif( $( 'li' ).hasClass( 'current_page_parent' ) ) {\n\t\t$(this).addClass( 'sub_menu_open' );\n\t\t$(this).find( '.dropdown_toggle' ).removeClass( 'closed' ).addClass( 'open' );\n\t\t$(this).find( 'sub-menu' ).show();\n\t}\n */\n\n\n\n\t $('.dropdown_toggle').on('click', function(e) {\n\t\t e.preventDefault();\n\n\t\t if ($(this).hasClass('closed')) {\n\t\t\t $('li.menu-item-has-children').removeClass('sub_menu_open');\n\t\t\t $('.dropdown_toggle').removeClass('open').addClass('closed');\n\t\t\t $(this).removeClass('closed').addClass('open');\n\t\t\t $(this).parent('li.menu-item-has-children').addClass('sub_menu_open');\n\t\t } else {\n\t\t\t$(this).removeClass( 'open' ).addClass( 'closed' );\n\t\t\t$(this).parent( 'li.menu-item-has-children' ).removeClass( 'sub_menu_open' );\n\t\t }\n\n      var $subMenu = $(this).siblings('.sub-menu');\n\n      // Close any open sub-menus\n      $('.sub-menu.active').not($subMenu).removeClass('active');\n\n      // Toggle the current sub-menu\n      $subMenu.toggleClass('active');\n\n      if ($subMenu.hasClass('active')) {\n        // Append the active sub-menu to the right column\n        $('.right-column').html($subMenu.clone().addClass('active'));\n\n        // Animate the sliding effect\n        $('.right-column .sub-menu.active').animate({ marginLeft: 0 }, 300);\n      } else {\n        // Animate the sliding effect before removing the sub-menu\n        $('.right-column .sub-menu.active').animate({ marginLeft: '100%' }, 300, function() {\n          $(this).remove();\n        });\n      }\n    });\n\n    // Close the sub-menu if clicked outside\n    $(document).on('click', function(e) {\n      if (!$(e.target).closest('.right-column').length && !$(e.target).closest('.menu-item-has-children').length) {\n        $('.sub-menu.active').removeClass('active');\n        $('.right-column .sub-menu.active').animate({ marginLeft: '100%' }, 300, function() {\n          $(this).remove();\n        });\n      }\n    });\n});\n\n\n","jQuery(document).ready(function ($) {\n\t$('#safeExit').hover(function (event) {\n\t\tevent.preventDefault();\n\t\t$('#safeExitContent').removeClass('hidden');\n\t});\n\n\t$('#safeExit a').on('click', function (e) {\n\t\tvar href = $(this).attr('href');\n\t\te.preventDefault();\n\t\tdocument.body.innerHTML = '';\n\t\twindow.open(href, '_newtab');\n\t\twindow.location.replace(href);\n\t})\n\n\t$('#safeExitContent').on(\"mouseleave\", function (event) {\n\t\tevent.preventDefault();\n\t\t$('#safeExitContent').addClass('hidden');\n\t});\n});","/**\n * adding \"smaller\" class for the top fixed nav\n */\n\n\njQuery(document).ready( function($) {\n\n\t$(window).scroll(function() {\n\t\tvar scroll = $(window).scrollTop();\n\n\t\tif (scroll >= 50) {\n\t\t\t$('header.site_main_header').addClass('smaller');\n\t\t} else {\n\t\t\t$('header.site_main_header').removeClass('smaller');\n\t\t}\n\t});\n\n});"]}