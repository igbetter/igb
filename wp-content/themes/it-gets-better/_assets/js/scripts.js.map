{"version":3,"sources":["darkmode-lightmode-toggle.js","nav-toggle.js","nav.js","offcanvas-nav.js","safe-exit.js","splide.js","sticky-header-helper.js"],"names":["igbDarkMode","init","this","changeListener","tabindexListener","$darkToggles","document","querySelectorAll","length","forEach","$t","addEventListener","e","toggle","currentTarget","checked","$s","key","keyCode","$checkbox","closest","querySelector","isChecked","classList","localStorage","setItem","setTimeout","body","$","fn","toggleAttr","attr","val","removeAttr","toggleAttrVal","val1","val2","test","on","toggleClass","jQuery","ready","addClass","hcOffcanvasNav","customToggle","levelTitles","levelTitleAsBack","width","height","disableBody","insertClose","hover","event","preventDefault","removeClass","href","innerHTML","window","open","location","replace","Splide","perPage","perMove","gap","drag","noDrag","dragMinThreshold","mouse","touch","keyboard","wheel","releaseWheel","trimSpace","cover","breakpoints","mount","scroll","scrollTop"],"mappings":"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","file":"scripts.js","sourcesContent":["const igbDarkMode = {\n  init() {\n    this.changeListener();\n    this.tabindexListener();\n  },\n\n  /**\n   * Change listener for dark mode toggle\n   */\n  changeListener() {\n    const $darkToggles = document.querySelectorAll('.dark-toggle input[type=\"checkbox\"]');\n    if ($darkToggles.length <= 0) { return; }\n\n    $darkToggles.forEach(($t) => {\n      $t.addEventListener('change', (e) => {\n        this.toggle(e.currentTarget.checked);\n      });\n    });\n  },\n\n  /**\n   * Keyboard listener for dark mode toggle\n   */\n  tabindexListener() {\n    const $darkSwitches = document.querySelectorAll('.dark-toggle__switch');\n\n    $darkSwitches.forEach(($s) => {\n      $s.addEventListener('keyup', (e) => {\n        if (e.key === 'Enter' || e.keyCode === 13) {\n          const $checkbox = e.currentTarget.closest('.dark-toggle').querySelector('input[type=\"checkbox\"]');\n          $checkbox.checked = !$checkbox.checked;\n          this.toggle($checkbox.checked);\n        }\n      });\n    });\n  },\n\n  /**\n   * Toggle the body class and cache the variable\n   */\n  toggle(isChecked) {\n\tdocument.querySelector('body').classList.toggle('theme-light');\n    document.querySelector('body').classList.toggle('theme-dark', isChecked);\n    localStorage.setItem('darkMode', isChecked);\n  },\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tigbDarkMode.init();\n});\n\nsetTimeout(function(){\n    document.body.classList.toggle('preload');\n},500);","(function($) {\n\t\"use strict\";\n\n\t// jquery toggle whole attribute\n  $.fn.toggleAttr = function(attr, val) {\n    var test = $(this).attr(attr);\n    if ( test ) {\n      // if attrib exists with ANY value, still remove it\n      $(this).removeAttr(attr);\n    } else {\n      $(this).attr(attr, val);\n    }\n    return this;\n  };\n\n  // jquery toggle just the attribute value\n  $.fn.toggleAttrVal = function(attr, val1, val2) {\n    var test = $(this).attr(attr);\n    if ( test === val1) {\n      $(this).attr(attr, val2);\n      return this;\n    }\n    if ( test === val2) {\n      $(this).attr(attr, val1);\n      return this;\n    }\n    // default to val1 if neither\n    $(this).attr(attr, val1);\n    return this;\n  };\n\n\t$( '#menu_toggle_button' ).on( 'click', function(e) {\n\t\t$(this).toggleClass('menu_open');\n\t\t$('body').toggleClass('menu_is_open');\n\t\t$('#site_utility_nav').toggleClass('hidden');\n\t\t$( 'path.top_line' ).toggleAttrVal( 'd', 'm 5 5 l 30 30', 'm 15 10 l 20 0');\n\t\t$( 'path.bottom_line' ).toggleAttrVal( 'd', 'm 5 35 l 30 -30', 'm 5 30 l 30 0');\n\t});\n})(jQuery);","jQuery(document).ready(function($) {\n\n\t$('li.current_page_parent').addClass('sub_menu_open');\n\n\n});\n\n\n","jQuery(document).ready(function ($) {\n\n\t$('#site_main_navigation').hcOffcanvasNav({\n\t\tcustomToggle: $('#menu_toggle_button'),\n\t\tlevelTitles: true,\n\t\tlevelTitleAsBack: true,\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\t//expanded: true, (just for testing/styling)\n\t\tdisableBody: false,\n\t\tinsertClose: false,\n\t});\n});","jQuery(document).ready(function ($) {\n\t$('#safeExit').hover(function (event) {\n\t\tevent.preventDefault();\n\t\t$('#safeExitContent').removeClass('hidden');\n\t});\n\n\t$('#safeExit a').on('click', function (e) {\n\t\tvar href = $(this).attr('href');\n\t\te.preventDefault();\n\t\tdocument.body.innerHTML = '';\n\t\twindow.open(href, '_newtab');\n\t\twindow.location.replace(href);\n\t})\n\n\t$('#safeExitContent').on(\"mouseleave\", function (event) {\n\t\tevent.preventDefault();\n\t\t$('#safeExitContent').addClass('hidden');\n\t});\n});"," document.addEventListener( 'DOMContentLoaded', function() {\n\t var splide = new Splide('.splide', {\n\t\t perPage: 4,\n\t\t perMove: 1,\n\t\t gap: '2rem',\n\t\t height: 'auto',\n\t\t drag: 'free',\n\t\t noDrag: 'input, textarea, .no-drag',\n\t\t dragMinThreshold: {\n\t\t\tmouse: 0,\n\t\t\ttouch: 10,\n\t\t },\n\t\t keyboard: true,\n\t\t wheel: true,\n\t\t releaseWheel: true,\n\t\t trimSpace: false,\n\t\t cover: true,\n\n\t\t breakpoints: {\n\t\t\t900: {\n\t\t\t\t perPage: 3,\n\t\t\t\t height: '150px',\n\t\t\t },\n\t\t\t640: {\n\t\t\t\t perPage: 2,\n\t\t\t\t height: '125px',\n\t\t\t},\n\t\t\t480: {\n\t\t\t\tperPage: 1,\n\t\t\t\theight: '100px',\n\t\t\t},\n\t\t},\n\t});\n\t splide.mount();\n  } );","/**\n * adding \"smaller\" class for the top fixed nav\n */\n\n\njQuery(document).ready( function($) {\n\n\t$(window).scroll(function() {\n\t\tvar scroll = $(window).scrollTop();\n\n\t\tif (scroll >= 50) {\n\t\t\t$('header.site_main_header').addClass('smaller');\n\t\t} else {\n\t\t\t$('header.site_main_header').removeClass('smaller');\n\t\t}\n\t});\n\n});"]}