{"version":3,"sources":["darkmode-lightmode-toggle.js","nav.js"],"names":["igbDarkMode","init","this","changeListener","tabindexListener","$darkToggles","document","querySelectorAll","length","forEach","$t","addEventListener","e","toggle","currentTarget","checked","$s","key","keyCode","$checkbox","closest","querySelector","isChecked","classList","localStorage","setItem","setTimeout","body","jQuery","ready","$","addClass","on","preventDefault","hasClass","removeClass","parent","find","show","animate","width","parents","hide"],"mappings":"AAAA,MAAAA,YAAA,CACA,IAAAC,GACAC,KAAAC,iBACAD,KAAAE,kBACA,EAKA,cAAAD,GACA,MAAAE,EAAAC,SAAAC,iBAAA,uCACAF,EAAAG,QAAA,GAEAH,EAAAI,SAAAC,IACAA,EAAAC,iBAAA,UAAAC,IACAV,KAAAW,OAAAD,EAAAE,cAAAC,QAAA,GACA,GAEA,EAKA,gBAAAX,GACAE,SAAAC,iBAAA,wBAEAE,SAAAO,IACAA,EAAAL,iBAAA,SAAAC,IACA,GAAA,UAAAA,EAAAK,KAAA,KAAAL,EAAAM,QAAA,CACA,MAAAC,EAAAP,EAAAE,cAAAM,QAAA,gBAAAC,cAAA,0BACAF,EAAAJ,SAAAI,EAAAJ,QACAb,KAAAW,OAAAM,EAAAJ,QACA,IACA,GAEA,EAKA,MAAAF,CAAAS,GACAhB,SAAAe,cAAA,QAAAE,UAAAV,OAAA,eACAP,SAAAe,cAAA,QAAAE,UAAAV,OAAA,aAAAS,GACAE,aAAAC,QAAA,WAAAH,EACA,GAGAhB,SAAAK,iBAAA,oBAAA,KACAX,YAAAC,MAAA,IAGAyB,YAAA,WACApB,SAAAqB,KAAAJ,UAAAV,OAAA,UACA,GAAA,KCrDAe,OAAAtB,UAAAuB,OAAA,SAAAC,GAEAA,EAAA,0BAAAC,SAAA,iBAGAD,EAAA,oBAAAE,GAAA,SAAA,SAAApB,GACAA,EAAAqB,iBAEAH,EAAA5B,MAAAgC,SAAA,WACAJ,EAAA,6BAAAK,YAAA,iBACAL,EAAA,oBAAAK,YAAA,QAAAJ,SAAA,UACAD,EAAA5B,MAAAiC,YAAA,UAAAJ,SAAA,QACAD,EAAA5B,MAAAkC,OAAA,6BAAAL,SAAA,iBACAD,EAAA5B,MAAAmC,KAAA,aAAAC,OAAAC,QAAA,CACAC,MAAA,aAIAV,EAAA5B,MAAAiC,YAAA,QAAAJ,SAAA,UACAD,EAAA5B,MAAAkC,OAAA,6BAAAD,YAAA,iBAEA,IAEAL,EAAA,gBAAAE,GAAA,SAAA,SAAApB,GACAkB,EAAA5B,MAAAuC,QAAA,6BAAAN,YAAA,iBACAL,EAAA5B,MAAAkC,OAAA,aAAAM,OAAAH,QAAA,CACAC,MAAA,UAEA,IAEAV,EAAA,MAAAI,SAAA,yBACAJ,EAAA5B,MAAA6B,SAAA,iBACAD,EAAA5B,MAAAmC,KAAA,oBAAAF,YAAA,UAAAJ,SAAA,QACAD,EAAA5B,MAAAmC,KAAA,YAAAC,OAGA","file":"scripts.js","sourcesContent":["const igbDarkMode = {\n  init() {\n    this.changeListener();\n    this.tabindexListener();\n  },\n\n  /**\n   * Change listener for dark mode toggle\n   */\n  changeListener() {\n    const $darkToggles = document.querySelectorAll('.dark-toggle input[type=\"checkbox\"]');\n    if ($darkToggles.length <= 0) { return; }\n\n    $darkToggles.forEach(($t) => {\n      $t.addEventListener('change', (e) => {\n        this.toggle(e.currentTarget.checked);\n      });\n    });\n  },\n\n  /**\n   * Keyboard listener for dark mode toggle\n   */\n  tabindexListener() {\n    const $darkSwitches = document.querySelectorAll('.dark-toggle__switch');\n\n    $darkSwitches.forEach(($s) => {\n      $s.addEventListener('keyup', (e) => {\n        if (e.key === 'Enter' || e.keyCode === 13) {\n          const $checkbox = e.currentTarget.closest('.dark-toggle').querySelector('input[type=\"checkbox\"]');\n          $checkbox.checked = !$checkbox.checked;\n          this.toggle($checkbox.checked);\n        }\n      });\n    });\n  },\n\n  /**\n   * Toggle the body class and cache the variable\n   */\n  toggle(isChecked) {\n\tdocument.querySelector('body').classList.toggle('theme-light');\n    document.querySelector('body').classList.toggle('theme-dark', isChecked);\n    localStorage.setItem('darkMode', isChecked);\n  },\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tigbDarkMode.init();\n});\n\nsetTimeout(function(){\n    document.body.classList.toggle('preload');\n},500);","jQuery(document).ready(function($) {\n\n\t$( 'li.current_page_parent' ).addClass( 'sub_menu_open' );\n\n\n\t$( '.dropdown_toggle' ).on( 'click', function(e) {\n\te.preventDefault();\n\n\tif( $(this).hasClass( 'closed' ) ) {\n\t\t$( 'li.menu-item-has-children' ).removeClass( 'sub_menu_open' );\n\t\t$( '.dropdown_toggle').removeClass( 'open' ).addClass( 'closed' );\n\t\t$(this).removeClass( 'closed' ).addClass( 'open' );\n\t\t$(this).parent( 'li.menu-item-has-children' ).addClass( 'sub_menu_open' );\n\t\t$(this).find( '.sub-menu' ).show().animate( {\n                width: \"toggle\"\n            });\n\t}\n\telse {\n\t\t$(this).removeClass( 'open' ).addClass( 'closed' );\n\t\t$(this).parent( 'li.menu-item-has-children' ).removeClass( 'sub_menu_open' );\n\t}\n\t});\n\n\t$( '.back_button' ).on( 'click' , function(e) {\n\t\t$(this).parents( 'li.menu-item-has-children' ).removeClass( 'sub_menu_open' );\n\t\t$(this).parent( '.sub-menu' ).hide().animate( {\n\t\t\t\t\twidth: \"toggle\"\n\t\t\t\t});\n\t});\n\n\tif( $( 'li' ).hasClass( 'current_page_parent' ) ) {\n\t\t$(this).addClass( 'sub_menu_open' );\n\t\t$(this).find( '.dropdown_toggle' ).removeClass( 'closed' ).addClass( 'open' );\n\t\t$(this).find( 'sub-menu' ).show();\n\t}\n\n});\n"]}